{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","App.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","components/Loader/Loader.js","App.js","index.js","components/Loader/Loader.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","handleChange","items","createReducer","_","payload","state","filter","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","axios","defaults","baseURL","getLoading","getFilter","getAllContacts","handleFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","number","e","currentTarget","value","setState","duplicateContactCheck","array","some","contact","handleSubmit","preventDefault","props","onSubmit","alert","formReset","this","className","styles","form","input","type","placeholder","pattern","title","required","onChange","button","Component","connect","dispatch","allContacts","post","then","data","catch","error","addContact","ContactList","fetchContacts","onDeleteContact","list","map","item","onClick","a","get","contactId","delete","Container","children","target","Loader","Loader__overlay","Loader__text","App","isLoadingContacts","main_header","header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87dbdbe2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__y248A\",\"item\":\"ContactList_item__mPjFq\",\"name\":\"ContactList_name__286Tb\",\"number\":\"ContactList_number__2ioo3\",\"button\":\"ContactList_button__1RCgB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2bUl4\",\"input\":\"ContactForm_input__1JmSX\",\"button\":\"ContactForm_button__YvlqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_header\":\"App_main_header__2KtQN\",\"header\":\"App_header__2f-x3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__fr4fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__19ysn\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const handleChange = createAction('contacts/handleChange');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  handleChange,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [handleChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n// import { persistStore } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from './contacts/contacts-reducers';\r\n// import middleware from './middleware';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\n\r\n// const contactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    dispatch(addContactRequest());\r\n\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\nexport const handleFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  duplicateContactCheck = (array, name) => {\r\n    return array.some(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n    const { onSubmit, contacts } = this.props;\r\n\r\n    const duplicateContact = this.duplicateContactCheck(contacts, name);\r\n\r\n    duplicateContact\r\n      ? alert(`${name} is already in contacts`)\r\n      : onSubmit(this.state);\r\n\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Contact:{' '}\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name and Surname\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:{' '}\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"+371-123-123-123\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может \r\n             с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: allContacts => dispatch(addContact(allContacts)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n} from '../../redux/contacts/contacts-operations';\r\nimport { handleFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, onDeleteContact } = this.props;\r\n\r\n    return (\r\n      <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={styles.item} key={id}>\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.number}>{number}</p>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              &#x2715;\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: handleFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.Container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { handleChange } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <input\r\n    className={styles.input}\r\n    type=\"text\"\r\n    placeholder=\"Search\"\r\n    value={value}\r\n    onChange={onChange}\r\n  ></input>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(handleChange(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import styles from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={styles.Loader__overlay}>\r\n      <div className={styles.Loader}>\r\n        <p className={styles.Loader__text}>l</p>\r\n        <p className={styles.Loader__text}>o</p>\r\n        <p className={styles.Loader__text}>a</p>\r\n        <p className={styles.Loader__text}>d</p>\r\n        <p className={styles.Loader__text}>i</p>\r\n        <p className={styles.Loader__text}>n</p>\r\n        <p className={styles.Loader__text}>g</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Container from './components/Container';\r\nimport Filter from './components/Filter';\r\nimport styles from './App.module.css';\r\nimport Loader from './components/Loader';\r\nimport { getLoading } from './redux/contacts/contacts-selectors';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { isLoadingContacts } = this.props;\r\n    return (\r\n      <Container>\r\n        <h1 className={styles.main_header}>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.header}>- Contacts -</h2>\r\n        <Filter />\r\n        <ContactList />\r\n        {isLoadingContacts && <Loader />}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: getLoading(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from 'redux-persist/integration/react';\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader__overlay\":\"Loader_Loader__overlay__3h081\",\"Loader\":\"Loader_Loader__31iBY\",\"Loader__text\":\"Loader_Loader__text__3Xbkw\",\"hover\":\"Loader_hover__1v98q\"};"],"sourceRoot":""}